buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-milestone' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.palantir.docker' version '0.13.0'
}

apply plugin: "org.springframework.boot"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (project.hasProperty('projVersion')) {
    project.version = project.projVersion
} else {
    project.version = "${version}"
}

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter-aws-messaging:2.0.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-aws:2.0.0.RELEASE")
    compile("org.springframework.kafka:spring-kafka")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.apache.kafka:kafka-clients:1.1.0")
    compile("io.micrometer:micrometer-registry-graphite:latest.release")
    compile("com.codahale.metrics:metrics-core:3.0.2")
    compile("io.micrometer:micrometer-core:1.0.6")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

repositories {
    maven {
        mavenCentral()
        url 'https://repo.spring.io/libs-milestone'
    }
}

springBoot {
    mainClassName = "com.sailthru.deliverability.SyringeApplication"
}

jar {
    mainClassName = "com.sailthru.deliverability.SyringeApplication"
    baseName = 'syringe'
    version = project.version
}

bootJar {
    baseName = 'syringe'
    version = project.version
}

docker {
    name "docker.sailthru.com/sandbox/syringe:$project.version"
    tags 'latest'
    dependsOn build
    files bootJar
    dockerfile file('src/main/docker/Dockerfile')
    buildArgs(['BUILD_VERSION': "${project.version}"])
}
